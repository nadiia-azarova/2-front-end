.second-title, .main-title {
  font-family: "Courier New", Courier, monospace;
}

.second-title, .main-title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

@font-face {
  font-family: "Poppins";
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/poppins-v15-latin-ext_latin-regular.woff2") format("woff2"), url("../fonts/poppins-v15-latin-ext_latin-regular.woff") format("woff");
}
@font-face {
  font-family: "Poppins";
  font-style: normal;
  font-weight: 500;
  src: local(""), url("../fonts/poppins-v15-latin-ext_latin-500.woff2") format("woff2"), url("../fonts/poppins-v15-latin-ext_latin-500.woff") format("woff");
}
body {
  background-color: red;
  background-image: url("../images/1.jpg");
}

.container {
  max-width: 1210px;
  padding: 0 15px;
  margin: 0 auto;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 -15px;
}

[class*=col-] {
  padding: 0 15px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.text {
  display: inline;
}
.text .menu__link {
  background-color: #fff;
}
.text p {
  text-align: center;
}
.text p a {
  color: red;
}
.text p a:hover {
  background-color: black;
}
.text p a span {
  color: black;
}
.text p a span::after {
  content: "";
}
.active .text p a span {
  color: black;
}

.page, .main-title {
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
}
.page::after, .main-title::after {
  content: "";
  display: block;
  clear: both;
}
.page__header {
  display: auto;
}
.menu__item:hover .menu__link {
  background-color: azure;
}
.header__text {
  color: red;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9leHRlbmQuc2NzcyIsInN0eWxlLmNzcyIsIl9taXhpbnMuc2NzcyIsIl92YXJzLnNjc3MiLCJfZ2xvYmFsLnNjc3MiLCJoZWFkZXIvX21lbnUuc2NzcyIsImhlYWRlci9faGVhZGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4Q0FBQTtBQ0NKOztBREVBO0VBQ0ksb0JBQUE7RUFBQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx5QkFBQTtFQUFBLHNCQUFBO0VBQUEsOEJBQUE7RUFDQSxtQkFBQTtFQUFBLGVBQUE7QUNDSjs7QUNDSTtFQUNJLHNCQ0dZO0VERlosa0JBSHdFO0VBSXhFLGdCQUpzRDtFQUt0RCxrS0FBQTtBREVSO0FDTkk7RUFDSSxzQkNHWTtFREZaLGtCQUh3RTtFQUl4RSxnQkVYZ0U7RUZZaEUsMEpBQUE7QURRUjtBR2pCQTtFQUNJLHFCREhRO0VDSVIsd0NBQUE7QUhtQko7O0FHaEJBO0VBQ0ksaUJESFM7RUNJVCxlQUFBO0VBQ0EsY0FBQTtBSG1CSjs7QUdoQkE7RUFDSSxvQkFBQTtFQUFBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLG1CQUFBO0VBQUEsZUFBQTtFQUNBLGVBQUE7QUhtQko7O0FHaEJBO0VBQ0ksZUFBQTtFQUNBLDhCQUFBO0VBQUEsc0JBQUE7QUhtQko7O0FHaEJBO0VGTkksZUFBQTtBRDBCSjtBR2xCUTtFQUNJLHNCQUFBO0FIb0JaO0FHaEJJO0VBQ0ksa0JBQUE7QUhrQlI7QUdoQlE7RUFDSSxVQUFBO0FIa0JaO0FHaEJZO0VBQ0ksdUJBQUE7QUhrQmhCO0FHZlk7RUFDSSxZQUFBO0FIaUJoQjtBR2ZnQjtFQUNJLFdBQUE7QUhpQnBCO0FHZGdCO0VBQ0ksWUFBQTtBSGdCcEI7O0FHVEE7RUFFSSwyREFBQTtBSFdKO0FDdEVJO0VBQ0ksV0FBQTtFQUNBLGNBQUE7RUFDQSxXQUFBO0FEd0VSO0FHZEk7RUFDSSxhQUFBO0FIZ0JSO0FJMUVZO0VBQ0ksdUJBQUE7QUo0RWhCO0FLOUVJO0VBQ0ksVUFBQTtBTGdGUiIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIlaGVhZGVncyB7XHJcbiAgICBmb250LWZhbWlseTogJ0NvdXJpZXIgTmV3JywgQ291cmllciwgbW9ub3NwYWNlO1xyXG59XHJcblxyXG4lZmxleC1qc3Qtd3JhcCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcbiIsIi5zZWNvbmQtdGl0bGUsIC5tYWluLXRpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFwiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlO1xufVxuXG4uc2Vjb25kLXRpdGxlLCAubWFpbi10aXRsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUG9wcGluc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogbG9jYWwoXCJcIiksIHVybChcIi4uL2ZvbnRzL3BvcHBpbnMtdjE1LWxhdGluLWV4dF9sYXRpbi1yZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9wb3BwaW5zLXYxNS1sYXRpbi1leHRfbGF0aW4tcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUG9wcGluc1wiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHNyYzogbG9jYWwoXCJcIiksIHVybChcIi4uL2ZvbnRzL3BvcHBpbnMtdjE1LWxhdGluLWV4dF9sYXRpbi01MDAud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL3BvcHBpbnMtdjE1LWxhdGluLWV4dF9sYXRpbi01MDAud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xufVxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzLzEuanBnXCIpO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMjEwcHg7XG4gIHBhZGRpbmc6IDAgMTVweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbjogMCAtMTVweDtcbn1cblxuW2NsYXNzKj1jb2wtXSB7XG4gIHBhZGRpbmc6IDAgMTVweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnRleHQge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG4udGV4dCAubWVudV9fbGluayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG4udGV4dCBwIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnRleHQgcCBhIHtcbiAgY29sb3I6IHJlZDtcbn1cbi50ZXh0IHAgYTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuLnRleHQgcCBhIHNwYW4ge1xuICBjb2xvcjogYmxhY2s7XG59XG4udGV4dCBwIGEgc3Bhbjo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xufVxuLmFjdGl2ZSAudGV4dCBwIGEgc3BhbiB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLnBhZ2UsIC5tYWluLXRpdGxlIHtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbn1cbi5wYWdlOjphZnRlciwgLm1haW4tdGl0bGU6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNsZWFyOiBib3RoO1xufVxuLnBhZ2VfX2hlYWRlciB7XG4gIGRpc3BsYXk6IGF1dG87XG59XG4ubWVudV9faXRlbTpob3ZlciAubWVudV9fbGluayB7XG4gIGJhY2tncm91bmQtY29sb3I6IGF6dXJlO1xufVxuLmhlYWRlcl9fdGV4dCB7XG4gIGNvbG9yOiByZWQ7XG59IiwiQG1peGluIGNsaXIge1xyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGNsZWFyOiBib3RoO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gZm9udC1mYWNlKCRmb250LWZhbWlseSwgJGZvbnQtZmlsZS1uYW1lLCAkZm9udC13ZWlnaHQ6IDQwMCwgJGZvbnQtc3R5bGU6IG5vcm1hbCkge1xyXG4gICAgQGZvbnQtZmFjZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcclxuICAgICAgICBmb250LXN0eWxlOiAkZm9udC1zdHlsZTtcclxuICAgICAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0O1xyXG4gICAgICAgIHNyYzogbG9jYWwoJycpLFxyXG4gICAgICAgIHVybCgnI3skcGF0aC1mb250c30jeyRmb250LWZpbGUtbmFtZX0ud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgdXJsKCcjeyRwYXRoLWZvbnRzfSN7JGZvbnQtZmlsZS1uYW1lfS53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiB0ZXN0IHtcclxuICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgIEBjb250ZW50O1xyXG59XHJcbiIsIi8vIENvbG9yc1xyXG4kY29sb3ItYmxhY2s6IGJsYWNrO1xyXG4kY29sb3ItcmVkOiByZWQ7XHJcblxyXG4vLyBCRyBDb2xvcnNcclxuJGJnLWJvZHktY29sb3I6ICRjb2xvci1yZWQ7XHJcblxyXG4kbWFpbi13aWR0aDogMTIxMHB4O1xyXG5cclxuJGRlZmF1bHQtZ2FwOiAxNXB4O1xyXG5cclxuJHBhdGgtaW1nOiAnLi4vaW1hZ2VzLyc7XHJcblxyXG4kZGVmYXVsdC1mb250LW5hbWU6ICdQb3BwaW5zJztcclxuJHBhdGgtZm9udHM6ICcuLi9mb250cy8nO1xyXG4iLCJAaW5jbHVkZSBmb250LWZhY2UoJGRlZmF1bHQtZm9udC1uYW1lLCBwb3BwaW5zLXYxNS1sYXRpbi1leHRfbGF0aW4tcmVndWxhcik7XHJcbkBpbmNsdWRlIGZvbnQtZmFjZSgkZGVmYXVsdC1mb250LW5hbWUsIHBvcHBpbnMtdjE1LWxhdGluLWV4dF9sYXRpbi01MDAsIDUwMCk7XHJcblxyXG5cclxuYm9keSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmctYm9keS1jb2xvcjtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnI3skcGF0aC1pbWd9MS5qcGcnKTtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6ICRtYWluLXdpZHRoO1xyXG4gICAgcGFkZGluZzogMCAkZGVmYXVsdC1nYXA7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLnJvdyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgbWFyZ2luOiAwICgtJGRlZmF1bHQtZ2FwKTtcclxufVxyXG5cclxuW2NsYXNzKj1cImNvbC1cIl0ge1xyXG4gICAgcGFkZGluZzogMCAkZGVmYXVsdC1nYXA7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4udGV4dCB7XHJcbiAgICBAaW5jbHVkZSB0ZXN0IHtcclxuICAgICAgICAubWVudV9fbGluayB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHAge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZWQ7XHJcblxyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuXHJcbiAgICAgICAgICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLmFjdGl2ZSAmIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5wYWdlIHtcclxuICAgIEBpbmNsdWRlIGNsaXI7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG5cclxuICAgICZfX2hlYWRlciB7XHJcbiAgICAgICAgZGlzcGxheTogYXV0bztcclxuXHJcbiAgICAgICAgJl9yZWQge31cclxuICAgIH1cclxufVxyXG5cclxuLm1haW4tdGl0bGUge1xyXG4gICAgQGV4dGVuZCAlaGVhZGVncztcclxuICAgIEBleHRlbmQgJWZsZXgtanN0LXdyYXA7XHJcbiAgICBAZXh0ZW5kIC5wYWdlO1xyXG59XHJcblxyXG4uc2Vjb25kLXRpdGxlIHtcclxuICAgIEBleHRlbmQgJWhlYWRlZ3M7XHJcbiAgICBAZXh0ZW5kICVmbGV4LWpzdC13cmFwO1xyXG59XHJcbiIsIi5tZW51IHtcclxuXHJcbiAgICAvLyAubWVudV9faXRlbVxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIC5tZW51X19saW5rIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGF6dXJlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIC5tZW51X19saW5rXHJcbiAgICAmX19saW5rIHt9XHJcblxyXG4gICAgLy8gLm1lbnVfX2J0blxyXG4gICAgJl9fYnRuIHt9XHJcbn1cclxuIiwiQGltcG9ydCAnLi9tZW51JztcclxuXHJcblxyXG4uaGVhZGVyIHtcclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIGNvbG9yOiByZWQ7XHJcbiAgICB9XHJcbn1cclxuIl19 */
