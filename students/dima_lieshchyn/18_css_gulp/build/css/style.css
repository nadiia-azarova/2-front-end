@import url(https://fonts.googleapis.com/css?family=Montserrat);
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

@font-face {
  font-family: "Rubik";
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/rubik-v14-latin-regular.woff2") format("woff2"), url("../fonts/rubik-v14-latin-regular.woff") format("woff");
}
@font-face {
  font-family: "Rubik";
  font-style: normal;
  font-weight: 700;
  src: local(""), url("../fonts/rubik-v14-latin-700.woff2") format("woff2"), url("../fonts/rubik-v14-latin-700.woff") format("woff");
}
.main-title {
  font-size: 50px;
  text-align: center;
  margin-bottom: 50px;
  font-weight: 700;
}

.sprite {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.page {
  font-family: "Rubik", Arial, Helvetica, sans-serif;
  font-size: 18px;
  font-weight: 400;
  line-height: 1.5;
  background-color: #f76707;
}

.container {
  max-width: 1110px;
  margin: 0 auto;
  padding: 0 15px;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 -15px;
}

[class*=col-] {
  padding: 0 15px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.col-1 {
  width: 8.3333333333%;
}

.col-2 {
  width: 16.6666666667%;
}

.col-3 {
  width: 25%;
}

.col-4 {
  width: 33.3333333333%;
}

.col-5 {
  width: 41.6666666667%;
}

.col-6 {
  width: 50%;
}

.col-7 {
  width: 58.3333333333%;
}

.col-8 {
  width: 66.6666666667%;
}

.col-9 {
  width: 75%;
}

.col-10 {
  width: 83.3333333333%;
}

.col-11 {
  width: 91.6666666667%;
}

.col-12 {
  width: 100%;
}

@-webkit-keyframes bounce_up {
  0%, 20%, 60%, 100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transform: translateY(0);
  }
  40% {
    -webkit-transform: translateY(-20px);
    transform: translateY(-20px);
    transform: translateY(-20px);
  }
  80% {
    -webkit-transform: translateY(-10px);
    transform: translateY(-10px);
    transform: translateY(-10px);
  }
}

@keyframes bounce_up {
  0%, 20%, 60%, 100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transform: translateY(0);
  }
  40% {
    -webkit-transform: translateY(-20px);
    transform: translateY(-20px);
    transform: translateY(-20px);
  }
  80% {
    -webkit-transform: translateY(-10px);
    transform: translateY(-10px);
    transform: translateY(-10px);
  }
}
@-webkit-keyframes bounce_down {
  0%, 20%, 60%, 100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transform: translateY(0);
  }
  40% {
    -webkit-transform: translateY(20px);
    transform: translateY(20px);
    transform: translateY(20px);
  }
  80% {
    -webkit-transform: translateY(10px);
    transform: translateY(10px);
    transform: translateY(10px);
  }
}
@keyframes bounce_down {
  0%, 20%, 60%, 100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transform: translateY(0);
  }
  40% {
    -webkit-transform: translateY(20px);
    transform: translateY(20px);
    transform: translateY(20px);
  }
  80% {
    -webkit-transform: translateY(10px);
    transform: translateY(10px);
    transform: translateY(10px);
  }
}
.social-list__title {
  text-align: center;
  font-size: 20px;
  font-weight: 700;
  margin-bottom: 20px;
}
.social-list__input[name=fasebook]:checked ~ .social-list__row .social-list__item_fasebook {
  opacity: 1;
}
.social-list__input[name=instagram]:checked ~ .social-list__row .social-list__item_instagram {
  opacity: 1;
}
.social-list__input[name=linkedin]:checked ~ .social-list__row .social-list__item_linkedin {
  opacity: 1;
}
.social-list__input[name=googleplus]:checked ~ .social-list__row .social-list__item_googleplus {
  opacity: 1;
}
.social-list__input[name=twitter]:checked ~ .social-list__row .social-list__item_twitter {
  opacity: 1;
}
.social-list__input:checked ~ .social-list__row .social-list__label_hide {
  visibility: visible;
  opacity: 1;
}
.social-list__input[name=fasebook]:checked ~ .social-list__row .social-list__url-item_fasebook {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  opacity: 1;
}
.social-list__input[name=instagram]:checked ~ .social-list__row .social-list__url-item_instagram {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  opacity: 1;
}
.social-list__input[name=linkedin]:checked ~ .social-list__row .social-list__url-item_linkedin {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  opacity: 1;
}
.social-list__input[name=googleplus]:checked ~ .social-list__row .social-list__url-item_googleplus {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  opacity: 1;
}
.social-list__input[name=twitter]:checked ~ .social-list__row .social-list__url-item_twitter {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  opacity: 1;
}
.social-list__input[name=fasebook]:checked ~ .social-list__row .social-list__item_fasebook .icon__img {
  fill: #3b5998;
  max-width: 27.7777777778px;
  max-height: 27.7777777778px;
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}
.social-list__input[name=fasebook]:checked ~ .social-list__row .social-list__item_fasebook .icon {
  visibility: visible;
}
.social-list__input[name=instagram]:checked ~ .social-list__row .social-list__item_instagram .icon__img {
  fill: #E1306C;
  max-width: 27.7777777778px;
  max-height: 27.7777777778px;
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}
.social-list__input[name=instagram]:checked ~ .social-list__row .social-list__item_instagram .icon {
  visibility: visible;
}
.social-list__input[name=linkedin]:checked ~ .social-list__row .social-list__item_linkedin .icon__img {
  fill: #2867B2;
  max-width: 27.7777777778px;
  max-height: 27.7777777778px;
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}
.social-list__input[name=linkedin]:checked ~ .social-list__row .social-list__item_linkedin .icon {
  visibility: visible;
}
.social-list__input[name=googleplus]:checked ~ .social-list__row .social-list__item_googleplus .icon__img {
  fill: #db4a39;
  max-width: 27.7777777778px;
  max-height: 27.7777777778px;
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}
.social-list__input[name=googleplus]:checked ~ .social-list__row .social-list__item_googleplus .icon {
  visibility: visible;
}
.social-list__input[name=twitter]:checked ~ .social-list__row .social-list__item_twitter .icon__img {
  fill: #00acee;
  max-width: 27.7777777778px;
  max-height: 27.7777777778px;
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}
.social-list__input[name=twitter]:checked ~ .social-list__row .social-list__item_twitter .icon {
  visibility: visible;
}
.social-list__label_hide {
  visibility: hidden;
  opacity: 0;
  -webkit-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
}
.social-list__item {
  margin-bottom: 5px;
  opacity: 0.3;
  -webkit-transition: opacity 0.5s ease-in-out;
  -o-transition: opacity 0.5s ease-in-out;
  transition: opacity 0.5s ease-in-out;
}
.social-list__item:hover {
  opacity: 0.7;
}
.social-list__item_left {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}
.social-list__label-item {
  background-color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
}
.social-list__url-list {
  overflow: hidden;
}
.social-list__url-item {
  margin-bottom: 5px;
  -webkit-transform: translateX(-100%);
  -ms-transform: translateX(-100%);
  transform: translateX(-100%);
  opacity: 0;
  -webkit-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
}
.social-list__input-group {
  position: relative;
}

.animated_title {
  display: block;
  font: 6.5em "Montserrat";
  width: 100%;
  height: 100px;
  margin: 0 auto;
}

.text-copy {
  fill: none;
  stroke: white;
  stroke-dasharray: 6% 29%;
  stroke-width: 5px;
  stroke-dashoffset: 0%;
  -webkit-animation: stroke-offset 5.5s infinite linear;
  animation: stroke-offset 5.5s infinite linear;
}

.text-copy:nth-child(1) {
  stroke: #3b5998;
  -webkit-animation-delay: -1;
  animation-delay: -1;
}

.text-copy:nth-child(2) {
  stroke: #2867B2;
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.text-copy:nth-child(3) {
  stroke: #3b5998;
  -webkit-animation-delay: -3s;
  animation-delay: -3s;
}

.text-copy:nth-child(4) {
  stroke: #db4a39;
  -webkit-animation-delay: -4s;
  animation-delay: -4s;
}

.text-copy:nth-child(5) {
  stroke: #3b5998;
  -webkit-animation-delay: -5s;
  animation-delay: -5s;
}

@-webkit-keyframes stroke-offset {
  100% {
    stroke-dashoffset: -35%;
  }
}

@keyframes stroke-offset {
  100% {
    stroke-dashoffset: -35%;
  }
}
.form__row {
  margin-bottom: 30px;
}
.form__item {
  position: relative;
}
.form__action {
  margin-top: 20px;
  padding: 10px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  background-color: #343a40;
}

.label, .social-list__label {
  display: block;
  background-color: #343a40;
  color: #fff;
  padding: 5px 10px;
  font-size: 20px;
}
.required .label::after, .required .social-list__label::after {
  content: " *";
  display: inline;
}

.input-group, .social-list__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.input-group_left {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}
.input-group__icon::after {
  content: "";
  display: block;
  z-index: -1;
  position: absolute;
  top: 0;
  left: 15px;
  right: 15px;
  bottom: 0;
  -webkit-box-shadow: 0 0 10px #343a40;
  box-shadow: 0 0 10px #343a40;
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
}

.input-text, .textarea, .social-list__label-item {
  width: 100%;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border: none;
  padding: 0 10px;
  height: 50px;
  outline: none;
}
.input-text:focus + .icon > .icon__img, .textarea:focus + .icon > .icon__img, .social-list__label-item:focus + .icon > .icon__img, .input-text[required]:valid:focus + .icon > .icon__img {
  fill: #f76707;
}
.input-text:focus + .input-group__icon::after, .textarea:focus + .input-group__icon::after, .social-list__label-item:focus + .input-group__icon::after {
  visibility: visible;
  opacity: 1;
}
.input-text[required]:valid + .icon > .icon__img, [required].textarea:valid + .icon > .icon__img, [required].social-list__label-item:valid + .icon > .icon__img {
  fill: green;
}
.input-text.fasebook:valid + .icon > .icon__img, .fasebook.textarea:valid + .icon > .icon__img, .fasebook.social-list__label-item:valid + .icon > .icon__img {
  fill: #3b5998;
}
.input-text.instagram:valid + .icon > .icon__img, .instagram.textarea:valid + .icon > .icon__img, .instagram.social-list__label-item:valid + .icon > .icon__img {
  fill: #E1306C;
}
.input-text.linkedin:valid + .icon > .icon__img, .linkedin.textarea:valid + .icon > .icon__img, .linkedin.social-list__label-item:valid + .icon > .icon__img {
  fill: #2867B2;
}
.input-text.googleplus:valid + .icon > .icon__img, .googleplus.textarea:valid + .icon > .icon__img, .googleplus.social-list__label-item:valid + .icon > .icon__img {
  fill: #db4a39;
}
.input-text.twitter:valid + .icon > .icon__img, .twitter.textarea:valid + .icon > .icon__img, .twitter.social-list__label-item:valid + .icon > .icon__img {
  fill: #00acee;
}

.textarea {
  resize: none;
  height: 150px;
  padding: 10px;
}
.textarea + .icon {
  height: auto;
}

.icon {
  width: 50px;
  height: 50px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #dee2e6;
}
.icon__img {
  max-width: 25px;
  max-height: 25px;
  fill: #495057;
}

.icon_hidden {
  visibility: hidden;
  position: absolute;
}

.input-hidden {
  visibility: hidden;
}

.btn {
  padding: 20px 50px;
  border: 1px solid #495057;
  text-transform: uppercase;
  cursor: pointer;
  -webkit-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
}
.btn_primary {
  background-color: #f76707;
  color: #fff;
}
.btn_primary:hover {
  background-color: #fff;
  color: #f76707;
  border: 1px solid #f76707;
  text-shadow: 1px 1px 2px #f76707;
  -webkit-animation: bounce_up 1s;
  animation: bounce_up 1s;
}
.btn_secondary {
  background-color: #fff;
  color: #f76707;
}
.btn_secondary:hover {
  background-color: #f76707;
  color: #fff;
  border: 1px solid #fff;
  text-shadow: 1px 1px 2px #fff;
  -webkit-animation: bounce_down 1s;
  animation: bounce_down 1s;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
