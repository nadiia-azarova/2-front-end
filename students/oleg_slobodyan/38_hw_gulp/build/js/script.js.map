{"version":3,"file":"script.js","mappings":";;;;;AAAA,CAAC,YAAY;AACT;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAG,CACZ;AACIC,IAAAA,WAAW,EAAE,MADjB;AAEIC,IAAAA,QAAQ,EAAE,CAFd;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,KAAK,EAAE,KAJX;AAKIC,IAAAA,QAAQ,EAARA;AALJ,GADY,EASZ;AACIJ,IAAAA,WAAW,EAAE,KADjB;AAEIC,IAAAA,QAAQ,EAAE,EAFd;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,KAAK,EAAE,IAJX;AAKIC,IAAAA,QAAQ,EAARA;AALJ,GATY,CAAhB;AAkBAL,EAAAA,OAAO,CAAC,CAAD,CAAP,CAAWK,QAAX;;AACA,WAASA,QAAT,GAAoB;AAChB,WAAO,KAAKC,SAAL,GAAiB,KAAKJ,QAAL,GAAgB,KAAKE,KAA7C;AACH;;AAEDG,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAKH,CAlCD,I","sources":["webpack://gulp_webpack/./src/js/script.js"],"sourcesContent":["(function () {\r\n    // Мінімум\r\n    // Створи масив «Список покупок». Кожен елемент масиву є об'єктом, який містить назву продукту, кількість і куплений він чи ні, ціну за одиницю товару, сума. Написати кілька функцій для роботи з таким масивом:\r\n    // 1. Виводити весь список на екран таким чином, щоб спочатку йшли продукти, що ще не придбані, а потім - ті, що вже придбали.\r\n    // 2. Покупка продукту. Функція приймає назву продукту і відзначає його як придбаний.\r\n    // 3. Створення списку (не) придбаних продуктів.\r\n    const buyList = [\r\n        {\r\n            productName: \"Milk\",\r\n            quantity: 2,\r\n            isBought: false,\r\n            price: 27.30,\r\n            sumPrice,\r\n\r\n        },\r\n        {\r\n            productName: \"Egg\",\r\n            quantity: 10,\r\n            isBought: false,\r\n            price: 3.60,\r\n            sumPrice,\r\n\r\n        },\r\n    ];\r\n    buyList[0].sumPrice();\r\n    function sumPrice() {\r\n        return this.sumPrices = this.quantity * this.price\r\n    }\r\n\r\n    console.log(buyList)\r\n\r\n\r\n\r\n\r\n})();\r\n"],"names":["buyList","productName","quantity","isBought","price","sumPrice","sumPrices","console","log"],"sourceRoot":""}